#=================================================
# https://github.com/p3terx/actions-openwrt
# description: build openwrt using github actions
# lisence: mit
# author: p3terx
# blog: https://p3terx.com
#=================================================

name: build openwrt

on: 
  repository_dispatch:
  workflow_dispatch:

env:
  repo_token: ${{ secrets.repo_token }}
  pppoe_username: ${{ secrets.pppoe_username }}
  pppoe_passwd: ${{ secrets.pppoe_passwd }}
  sckey: ${{ secrets.sckey }}
  telegram_token: ${{ secrets.telegram_token }}
  telegram_chat_id: ${{ secrets.telegram_chat_id }}
  ssh_private_key: ${{ secrets.ssh_private_key }}
  tz: asia/shanghai

jobs:
  build:
    runs-on: ubuntu-20.04
    
    name: build ${{matrix.target}}
    strategy:
      fail-fast: false
      matrix:
        target: ["${{ github.event.client_payload.target }}"]
        
    steps:
    - name: checkout
      uses: actions/checkout@main

    - name: cancel running workflows
      uses: styfle/cancel-workflow-action@main
      if: contains(github.event.action, 'cw')
      with:
        workflow_id: 4439867
        access_token: ${{ github.token }}

    - name: load settings.ini
      run: |
        source "${github_workspace}/devices/common/settings.ini"
        if [ -f "devices/${{matrix.target}}/settings.ini" ]; then
          source "${github_workspace}/devices/${{matrix.target}}/settings.ini"
        fi
        echo "repo_url=${repo_url}" >> $github_env
        echo "repo_branch=${repo_branch}" >> $github_env
        echo "config_file=${config_file}" >> $github_env
        echo "diy_sh=${diy_sh}" >> $github_env
        echo "free_up_disk=${free_up_disk}" >> $github_env
        echo "upload_bin_dir_for_artifact=${upload_bin_dir_for_artifact}" >> $github_env
        echo "upload_firmware_for_artifact=${upload_firmware_for_artifact}" >> $github_env
        echo "upload_firmware_for_release=${upload_firmware_for_release}" >> $github_env
        echo "upload_firmware_to_cowtransfer=${upload_firmware_to_cowtransfer}" >> $github_env
        echo "upload_firmware_to_wetransfer=${upload_firmware_to_wetransfer}" >> $github_env

    - name: trigger packages update
      run: |
        gitdate=$(curl -s "https://api.github.com/repos/garypang13/openwrt-packages/actions/runs" | jq -r '.workflow_runs[0].updated_at')
        gitdate=$(date -d "$gitdate" +%s)
        now=$(date -d "$(date '+%y-%m-%d %h:%m:%s')" +%s)
        if [[ $(expr $gitdate + 300) < $now ]]; then
          curl -x post https://api.github.com/repos/garypang13/openwrt-packages/dispatches \
            -h "accept: application/vnd.github.everest-preview+json" \
            -h "authorization: token ${{ secrets.repo_token }}" \
          --data '{"event_type": "update"}'
        fi

    - name: initialization environment
      env:
        debian_frontend: noninteractive
      run: |
        ( sudo -e apt-get -qq update
        sudo -e apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx-ucl libelf-dev autoconf automake libtool autopoint device-tree-compiler ccache xsltproc rename antlr3 gperf wget curl swig rsync
        sudo -e apt-get -qq purge azure-cli ghc* zulu* hhvm llvm* firefox powershell openjdk* dotnet* google* mysql* php* android*
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -e apt-get -qq autoremove --purge
        sudo -e apt-get -qq clean ) &
        sudo timedatectl set-timezone "$tz"
    
    - name: get current date
      id: date
      run: |
        echo "date=$(date +'%m/%d_%y_%h/%m')" >> $github_env
        echo "date2=$(date +'%m/%d %y')" >> $github_env
        echo "date3=$(date +'%m.%d')" >> $github_env
        echo "date4=$(date +'%m.%d.%y')" >> $github_env

    - name: clone source code
      run: |
        git clone --depth 1 $repo_url -b $repo_branch openwrt
        cd openwrt
        if [[ ${{matrix.target}} == "x86_641" ]]; then
            wget -co sdk.tar.xz https://downloads.openwrt.org/releases/21.02-snapshot/targets/x86/64/openwrt-sdk-21.02-snapshot-x86-64_gcc-8.4.0_musl.linux-x86_64.tar.xz
        elif [[ ${{matrix.target}} =~ (nanopi-r2s|nanopi-r4s) ]]; then
            wget -co sdk.tar.xz https://downloads.openwrt.org/releases/21.02-snapshot/targets/rockchip/armv8/openwrt-sdk-21.02-snapshot-rockchip-armv8_gcc-8.4.0_musl.linux-x86_64.tar.xz
        elif [[ ${{matrix.target}} =~ "rpi-4b" ]]; then
            wget -co sdk.tar.xz https://downloads.openwrt.org/releases/21.02-snapshot/targets/bcm27xx/bcm2711/openwrt-sdk-21.02-snapshot-bcm27xx-bcm2711_gcc-8.4.0_musl.linux-x86_64.tar.xz
        fi
      
    - name: free up disk space
      if: env.free_up_disk == 'true'
      env:
        debian_frontend: noninteractive
      run: |
        sudo mkdir -p -m 777 /mnt/openwrt/dl /mnt/openwrt/staging_dir /mnt/openwrt/build_dir/hostpkg openwrt/build_dir
        ln -sf /mnt/openwrt/dl openwrt/dl
        ln -sf /mnt/openwrt/staging_dir openwrt/staging_dir
        ln -sf /mnt/openwrt/build_dir/hostpkg openwrt/build_dir/hostpkg

    - name: load && update feeds
      run: |
        cp -rf devices/common/. openwrt/
        cp -rf devices/${{matrix.target}}/. openwrt/
        cd openwrt
        ./scripts/feeds update -a
        cd feeds/custom && git pull

    - name: load custom configuration
      run: |
        cp -rf devices openwrt/
        cd openwrt
        chmod +x devices/common/$diy_sh
        /bin/bash "devices/common/$diy_sh"
        cp -rf ./diy/* ./
        if [ -f "devices/${{matrix.target}}/$diy_sh" ]; then
          chmod +x devices/${{matrix.target}}/$diy_sh
          /bin/bash "devices/${{matrix.target}}/$diy_sh"
        fi
        cp -f devices/common/default-settings package/*/*/default-settings/files/uci.defaults
        if [ -f "devices/${{matrix.target}}/default-settings" ]; then
          echo >> package/*/*/default-settings/files/uci.defaults
          cat devices/${{matrix.target}}/default-settings >> package/*/*/default-settings/files/uci.defaults
        fi
        cp -f devices/common/$config_file .config
        if [ -f "devices/${{matrix.target}}/$config_file" ]; then
          echo >> .config
          cat devices/${{matrix.target}}/$config_file >> .config
        fi

    - name: apply patches
      run: |
        cd openwrt
        find "devices/common/patches" -type f ! -path 'devices/common/patches/china_mirrors.patch' -name '*.patch' -print0 | sort -z | xargs -i % -t -0 -n 1 sh -c "cat '%'  | patch -d './' -p1 -e --forward --no-backup-if-mismatch"
        if [ -n "$(ls -a "devices/${{matrix.target}}/patches" 2>/dev/null)" ]; then
          find "devices/${{matrix.target}}/patches" -type f -name '*.patch' ! -name '*.revert.patch' -print0 | sort -z | xargs -i % -t -0 -n 1 sh -c "cat '%'  | patch -d './' -p1 -e --forward --no-backup-if-mismatch"
        fi
        
    - name: default pppoe setting
      if: env.pppoe_username && env.pppoe_passwd
      run: |
        sed -i '$i uci set network.wan.username=${{ env.pppoe_username }}' openwrt/package/*/*/default-settings/files/uci.defaults
        sed -i '$i uci set network.wan.password=${{ env.pppoe_passwd }}' openwrt/package/*/*/default-settings/files/uci.defaults
        sed -i '$i uci commit network' openwrt/package/*/*/default-settings/files/uci.defaults
              
    - name: ssh connection to actions
      uses: garypang13/debugger-action@master
      if: contains(github.event.action, 'ssh')

    - name: download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j$(($(nproc)+1)) &

    - name: compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(($(nproc)+1)) thread compile"
        make -j$(($(nproc)+1)) || make -j1 v=s
        echo "::set-output name=status::success"
   
    - name: check space usage
      run: df -ht
   
    - name: upload bin directory
      uses: actions/upload-artifact@main
      if: env.upload_bin_dir_for_artifact == 'true'
      with:
        name: openwrt_bin_${{matrix.target}}
        path: openwrt/bin

    - name: organize files
      id: organize
      run: |
        mkdir firmware && find openwrt/bin/targets/*/*/ -maxdepth 1 \
        -name "*combined*" \
        -or -name "*sysupgrade*" \
        | xargs -i mv -f {} ./firmware/
        cp openwrt/.config  ./firmware/${{matrix.target}}.config
        cd firmware
        echo ${{ env.date4 }} > version.txt
        rename -v "s/^openwrt/${{ env.date3 }}-openwrt/" *
        rename -v "s/friendlyarm_//" *gz
        md5=$((md5sum *squashfs-sysupgrade* || md5sum *squashfs-combined-efi*) | awk '{print $1}') 2>/dev/null
        echo $md5 >> version.txt
        echo "firmware=$pwd" >> $github_env
        emoji=("🎉" "🤞" "✨" "🎁" "🎈" "🎄" "🎨" "💋" "🍓" "🍕" "🍉" "💐" "🌴" "🚀" "🛸" "🗽" "⛅" "🌈" "🔥" "⛄" "🐶" "🏅" "🦄" "🐤")
        random=$$$(date +%s)
        rand=$[$random % ${#emoji[@]}]
        echo "emoji=${emoji[$rand]}" >> $github_env
        if [ ${{matrix.target}} == "x86_64" ]; then
        echo "notice=请分配不少于800m的存储容量" >> $github_env
        fi

    - name: upload firmware for artifact
      uses: actions/upload-artifact@main
      continue-on-error: true
      if: env.upload_firmware_for_artifact == 'true'
      with:
        name: ${{ env.date3 }} ${{matrix.target}}
        path: ${{ env.firmware }}

    - name: deploy files to server
      uses: easingthemes/ssh-deploy@main
      if: env.ssh_private_key && ! contains(github.event.action, 'noser')
      with:
        ssh_private_key: ${{ secrets.ssh_private_key }}
        args: "-avzr --exclude="
        source: firmware/
        remote_host: op.supes.top
        remote_user: root
        target: "/www/wwwroot/op.supes.top/firmware/${{matrix.target}}/"
 
    - name: upload firmware to cowtransfer
      if: env.upload_firmware_to_cowtransfer == 'true'
      continue-on-error: true
      run: |
        curl -fssl git.io/file-transfer | sh
        cowurl=$(./transfer cow --block 2621440 -s --no-progress ${firmware})
        cowurl=$(echo $cowurl | grep -o -e "https[^ ]*")
        echo "cowurl=$cowurl" >> $github_env
        echo "download link: ${{ env.emoji }} $cowurl ${{ env.emoji }} 🚀"
 
    - name: upload firmware to wetransfer
      if: env.upload_firmware_to_wetransfer == 'true' && ! contains(github.event.action, 'noup')
      continue-on-error: true
      run: |
        curl -fssl git.io/file-transfer | sh
        wetrans=$(./transfer wet -s -p 16 --no-progress ${firmware})
        wetrans=$(echo $wetrans | grep -o -e "https[^ ]*")
        echo "wetrans=$wetrans" >> $github_env
        echo "download link: ${{ env.emoji }} $wetrans ${{ env.emoji }} 🚀"

    - name: create release
      id: create_release
      if: env.repo_token && env.upload_firmware_for_release == 'true'
      continue-on-error: true
      run: |
        echo -e "墙内加速下载 🚀:\n" >> release.txt
        echo -e "[腾讯云] (https://op.supes.top/firmware/${{matrix.target}}/ ☁)\n" >> release.txt
        [ ${{ env.wetrans }} ] && echo -e "[wetransfer] (${{ env.wetrans }} 🗽)\n" >> release.txt
        [ ${{ env.cowurl }} ] && echo -e "[奶牛上传] (${{ env.cowurl }} 🐮)\n" >> release.txt
        [ ${{ env.notice }} ] && echo -e "${{ env.notice }}" >> release.txt || true

    - name: upload firmware for release
      uses: softprops/action-gh-release@v1
      continue-on-error: true
      if: env.repo_token && env.upload_firmware_for_release == 'true'
      env:
        github_token: ${{ secrets.repo_token }}
      with:
        files: "${{ env.firmware }}/*"
        name: ${{ env.date2 }} ${{matrix.target}} ${{ env.emoji }}
        tag_name: ${{ env.date }}_${{matrix.target}}
        body_path: release.txt
        
    - name: wechat notification
      continue-on-error: true
      if: env.sckey
      run: |
        [ steps.compile.outputs.status == 'success' ] && curl https://sc.ftqq.com/${{ secrets.sckey }}.send?text=🎉openwrt_${{ env.date3 }}_${{matrix.target}}编译完成😋|| curl https://sc.ftqq.com/${{ secrets.sckey }}.send?text=❌openwrt_${{ env.date3 }}_${{matrix.target}}编译失败😂

    - name: telegram notification
      if: env.telegram_token && ! contains(github.event.action, 'notg')
      continue-on-error: true
      run: |
        # [ steps.compile.outputs.status == 'success' ] && curl -k --data chat_id="${{ secrets.telegram_chat_id }}" --data "text=🎉 openwrt ${{ env.date3 }} ${{matrix.target}} 编译成功 😋  https://op.supes.top/firmware/${{matrix.target}}/  ${{ env.cowurl }}   ${{ env.wetrans }} 🚀" "https://api.telegram.org/bot${{ secrets.telegram_token }}/sendmessage" || curl -k --data chat_id="${{ secrets.telegram_to }}" --data "text=❌ openwrt ${{ env.date3 }} ${{matrix.target}} 编译失败 😂" "https://api.telegram.org/bot${{ secrets.telegram_token }}/sendmessage"

    - name: delete workflow runs
      uses: gitrml/delete-workflow-runs@main
      with:
        retain_days: 10
        keep_minimum_runs: 0

    - name: remove old releases
      uses: dev-drprasad/delete-older-releases@master
      continue-on-error: true
      if: env.upload_firmware_for_release == 'true' && !cancelled()
      with:
        keep_latest: 15
        delete_tags: true
      env:
        github_token: ${{ secrets.repo_token }}
